# PS-MPD Documentation
This module exposes convenient commands and tab completions for the Music Player Daemon (MPD).

This page documents available commands briefly. All the commands and their usage is self-explanatory and for the parameters you can call `Get-Help`.

One thing to note is this module works in-memory, that is, the music library is loaded into memory (only the metadata) and serialized into pwoershell objects.

The reasoning behind it is with this approach tab completions work fast even on huge libraries.

However this means that the state of MPD and the module can get out of sync.
So, everytime you open a new Powershell session or modify MPD, you need to call `Sync-MPD`.

This module does not attempt to remedy badly tagged music. This means it does not look at the directory structure of your music folder.

The metadata this module keeps is as follows:
- Title
- Album
- Artist
- Duration
- Track No (if available, else ignored)
- File (mpc needs the file path as MPD knows - to play songs)

However, even tracks without any tags will be loaded and available.

## Playlists
PS-MPD does not enforce any playlist file format but defers to MPD's default: m3u.
The format recognized is the same as MPD.

However, you need to specify a playlists directory to `Sync-MPD` with the `-PlaylistsDir` parameter if you want to work with your playlists.

For convenience I recommend you set this in `$PSDefaultParameterValues`, an automatic variable built-into Powershell.
For example, somewhere in your Powershell profile:
```powershell
$PSDefaultParameterValues["Sync-MPD:PlaylistsDir"] = "D:\music\playlists"
```

The m3u files under the directory you specified will be recognized as playlists.

## Enabling Nicer Information Messages
Since Powershell by default does not show messages written with `Write-Information`, I suggest you enable them at for this modules commands, again with `$PSDefaultParameterValues`.

For example:

```powershell
$PSDefaultParameterValues["*-Playlist":InformationAction] =
	$PSDefaultParameterValues["*-Track":InformationAction] =
	$PSDefaultParameterValues["Play-Album:InformationAction"] =
	$PSDefaultParameterValues["Play-Artist:InformationAction"] = "Continue"
```

(Yes, that syntax is valid.)

## Commands Overview
